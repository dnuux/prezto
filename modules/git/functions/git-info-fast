# vim: set ft=zsh:
#
# Displays Git repository information. A simplification of git-info
# that shows less (and therefore runs faster).
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Patrick Brisbin <pbrisbin@gmail.com>
#

# Gets the Git status information.
function git-info-fast {
  # Extended globbing is needed to parse repository status.
  setopt LOCAL_OPTIONS
  setopt EXTENDED_GLOB

  local branch
  local branch_format
  local branch_formatted
  local branch_info
  local -A info_formats
  local info_format

  # Clean up previous $git_info.
  unset git_info_fast
  typeset -gA git_info_fast

  # Not in a repo.
  if [[ ! -e ./.git ]]; then
    zstyle -a ':omz:module:git' info 'info_formats'
    for info_format in ${(k)info_formats}; do
      git_info_fast[$info_format]=''
    done

    return 0
  fi

  # Format branch.
  branch="${$(git symbolic-ref -q HEAD)##refs/heads/}"
  if [[ -n "$branch" ]]; then
    zstyle -s ':omz:module:git' branch 'branch_format'
    zformat -f branch_formatted "$branch_format" "b:$branch"
  fi

  # Format info.
  zstyle -a ':omz:module:git' info 'info_formats'
  for info_format in ${(k)info_formats}; do
    zformat -f REPLY "$info_formats[$info_format]" \
      "b:$branch_formatted"
    git_info_fast[$info_format]="$REPLY"
  done

  unset REPLY

  return 0
}

git-info-fast "$@"

